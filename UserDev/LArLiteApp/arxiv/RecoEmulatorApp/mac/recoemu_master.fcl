
EmuDriver: {

    MCTrackProducer:  mcreco
    MCShowerProducer: mcreco
    DisableXShift:    1
    TrackEmulator:    TrackEmuMaster
    ShowerEmulator:   ShowerEmuSmearingParametrized

    TrackEmuMaster: {

        TrackEmuTrackDeviation:  {

            #These are Rui's histos from slide 7 of this talk:
            # http://microboone-docdb.fnal.gov:8080/cgi-bin/RetrieveFile?docid=5364&filename=20160212Deviation%26Length.pdf&version=2
            XDeviationMin: -0.3
            XDeviationMax: 0.3
            XDeviationValues: [0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,2.0,2.0,6.0,9.0,14.0,13.0,28.0,16.0,22.0,20.0,34.0,22.0,29.0,33.0,36.0,37.0,41.0,38.0,35.0,35.0,56.0,45.0,45.0,46.0,51.0,63.0,54.0,59.0,69.0,69.0,65.0,20.0,11.0,3.0,3.0,3.0,1.0,0.0,0.0,2.0,0.0,0.0,2.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]

            YDeviationMin: -0.3
            YDeviationMax: 0.3
            YDeviationValues: [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,2.0,0.0,0.0,0.0,1.0,0.0,2.0,3.0,2.0,6.0,7.0,4.0,7.0,10.0,23.0,19.0,21.0,24.0,33.0,40.0,42.0,57.0,61.0,104.0,86.0,121.0,93.0,65.0,57.0,47.0,39.0,38.0,26.0,23.0,14.0,8.0,9.0,11.0,5.0,4.0,0.0,9.0,1.0,3.0,1.0,3.0,0.0,1.0,2.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]

            ZDeviationMin: -0.3
            ZDeviationMax: 0.3
            ZDeviationValues: [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0,1.0,3.0,7.0,12.0,15.0,26.0,25.0,33.0,27.0,38.0,47.0,76.0,71.0,100.0,93.0,100.0,81.0,67.0,71.0,45.0,36.0,30.0,19.0,27.0,13.0,14.0,8.0,13.0,11.0,3.0,2.0,2.0,1.0,2.0,3.0,0.0,2.0,2.0,1.0,2.0,0.0,0.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]

        }

        TrackEmuTrackDeviationParametrized: {
            SmearFunc: "TMath::Gaus(x,[0],[1],1)"
            # 1st param: center of gaussian
            # 2nd param: width of gaussian
            XSmearParams: [0.06,0.03]
            XSmearMin: -1
            XSmearMax: 1
            YSmearParams: [0,0.03]
            YSmearMin: -1
            YSmearMax: 1
            ZSmearParams: [0,0.03]
            ZSmearMin: -1
            ZSmearMax: 1
        }

        TrackEmuApplyTotalEff:  {
            #LengthEff is a weird arctan function
            LengthEffParam0: 1. #"slope at halfway point (actually gives the gradient at this point)"
            LengthEffParam1: 1. #"position of halfway point"
            
            #Theta and Phi eff is a very complicated 2D function
            AngleEffParam0: 0.95 #"maximum (at phi = 90)"
            AngleEffParam1: 0.8 #"minimum of distribution (along x)"
            AngleEffParam2: 0.9 #"maximum at (theta -> 0, phi = 0)"
            
        }

        TrackEmuTrackFlip:  {
            FlipProbability: 0.10
        }
    }

    ShowerEmuSmearing: {

        EnergyResolutionMin: -0.9
        EnergyResolutionMax: 0.9
        EnergyResolutionValues: [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,1.0,1.0,2.0,3.0,5.0,12.0,9.0,8.0,27.0,36.0,57.0,55.0,74.0,97.0,127.0,161.0,146.0,209.0,226.0,261.0,233.0,267.0,252.0,200.0,163.0,147.0,98.0,68.0,53.0,40.0,31.0,20.0,19.0,11.0,16.0,5.0,8.0,9.0,5.0,6.0,4.0,4.0,3.0,2.0,3.0,2.0,2.0,0.0,2.0,1.0,0.0,1.0,0.0,1.0,0.0,2.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]

        XResolutionMin: -1.5
        XResolutionMax: 1.5
        XResolutionValues: [1.0,2.0,2.0,2.0,1.0,1.0,2.0,2.0,3.0,3.0,0.0,2.0,3.0,1.0,3.0,3.0,5.0,7.0,4.0,2.0,3.0,2.0,3.0,2.0,4.0,4.0,3.0,1.0,6.0,1.0,5.0,3.0,3.0,3.0,4.0,4.0,12.0,2.0,13.0,22.0,17.0,23.0,46.0,50.0,60.0,75.0,113.0,134.0,180.0,220.0,268.0,282.0,269.0,236.0,180.0,136.0,105.0,106.0,56.0,51.0,42.0,39.0,16.0,9.0,10.0,16.0,10.0,4.0,9.0,11.0,5.0,4.0,5.0,8.0,1.0,6.0,7.0,5.0,3.0,5.0,6.0,4.0,4.0,3.0,6.0,3.0,4.0,7.0,5.0,5.0,4.0,8.0,5.0,5.0,4.0,8.0,2.0,0.0,3.0]

        YResolutionMin: -1.5
        YResolutionMax: 1.5
        YResolutionValues: [0.0,4.0,1.0,4.0,0.0,2.0,1.0,1.0,1.0,1.0,1.0,2.0,4.0,4.0,0.0,2.0,1.0,1.0,5.0,3.0,4.0,5.0,2.0,1.0,3.0,4.0,6.0,3.0,5.0,6.0,5.0,7.0,11.0,6.0,8.0,12.0,18.0,11.0,23.0,24.0,45.0,71.0,101.0,109.0,159.0,142.0,163.0,216.0,220.0,199.0,208.0,204.0,190.0,165.0,124.0,124.0,95.0,67.0,44.0,36.0,30.0,9.0,4.0,10.0,6.0,8.0,2.0,2.0,3.0,3.0,2.0,1.0,2.0,3.0,2.0,2.0,0.0,3.0,1.0,0.0,0.0,1.0,0.0,3.0,1.0,2.0,2.0,0.0,0.0,1.0,1.0,2.0,1.0,0.0,0.0,1.0,3.0,1.0,1.0]

        ZResolutionMin: -1.5
        ZResolutionMax: 1.5
        ZResolutionValues: [0.0,0.0,2.0,0.0,1.0,2.0,0.0,1.0,1.0,0.0,1.0,1.0,4.0,2.0,2.0,3.0,1.0,1.0,0.0,3.0,1.0,1.0,5.0,3.0,1.0,2.0,1.0,3.0,6.0,6.0,4.0,5.0,6.0,11.0,6.0,12.0,21.0,23.0,40.0,46.0,58.0,92.0,132.0,202.0,235.0,251.0,294.0,263.0,248.0,255.0,227.0,201.0,172.0,124.0,68.0,36.0,28.0,21.0,8.0,10.0,6.0,4.0,6.0,5.0,3.0,6.0,4.0,1.0,1.0,2.0,2.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]

        AngleResolutionMin: 0
        AngleResolutionMax: 180
        AngleResolutionValues: [548,664,452,299,222,180,136,147,104,74,67,60,48,35,22,28,28,15,9,16,13,14,9,18,11,14,5,10,9,4,4,6,4,5,6,4,3,7,8,8,6,4,5,5,5,4,4,4,4,1,1,1,0,3,0,4,1,3,2,2,2,1,0,2,1,2,1,2,2,2,4,2,1,0,3,1,2,5,0,4,1,2,1,1,1,8,5,4,4,4,3,3,8,10,12,11,17,13,4]

        dEdxResolutionMean: 1.87
        dEdxResolutionMin: 0.46
        dEdxResolutionMax: 1.54
        dEdxResolutionValues: [8,7,9,11,15,8,12,15,14,10,17,11,14,16,17,24,29,38,38,69,73,91,106,124,164,129,136,130,144,120,112,108,93,82,66,60,42,45,32,28,25,30,13,18,14,8,18,16,16]

        }

    ShowerEmuSmearingParametrized: {

        # efficiency function x-axis is energy [MeV], y-axis is reconstruction eff (0,1) 
        EffFunc:   "((atan([1]*(x-[0]))/pi) + 0.5)"
        # params
        # 1st: slope at halfway point (actually gives the gradient at this point)
        # 2nd: position of halfway point
        EffParams: [5.0,0.5] 
        EffMin:   0         # minimum energy
        EffMax:   5000      # maximum energy to use in eff function

        # energy resolution function. This is a relative resolution
        # this parametrization represents the energy resolution @ 1 GeV of energy
        # the energy resolution will be energy dependent and follow the form:
        # Eres (E) = Eres(1GeV) / sqrt (E / 1 GeV)
        EResFunc: "TMath::Gaus(x,[0],[1],1)"
        # params:
        # 1st param: center of gaussian ( 0 -> no offset in enerergy resolution)
        # 2nd param: width of gaussian
        EResParams: [0,0.05]
        # minimum of function : -1 since this is a relative energy resolution
        EResMin: -1
        # maximum of function: +1 since this is a relative energy resolution
        EResMax: 1

        # angular resolution function.
        # this is the smearing to be applied, in degrees, to the input angle
        AngleResFunc: "TMath::Landau(x,[0],[1],1)"
        # 1st param: MPV of lanadau (the "peak" smeaing angle)
        # 2nd param: the width of the landau (how large the tail of the distribution will be)
        AngleResParams: [2.,1.]
        # miimum angle, should always be 0
        AngleResMin: 0
        # maximum angle, should always be 180
        AngleResMax: 180

        # position resolution function.
        # this is an absolute resolution (in cm) and is gaussian.
        # ( pos += pos_smearing )
        PosResFunc: "TMath::Gaus(x,[0],[1],1)"
        # params:
        # 1st param: mean of gaussian (0 -> no offset)
        # 2nd param: sigma of gaussian (0.3 would be a smearing = to wire-spacing)
        PosResParams: [0,0.3]
        # minimum of function (in cm)
        PosResMin: -3
        # maximum of function (in cm)
        PosResMax: 3

        # shower direction flipping
        # this is the fraction of times the shower direction will be flipped
        # this factor is applied uniformly for all showers. no energy depedence
        DirectionFlipFrac: 0.05

        # dedx resolution function.
        # this is a fractional resolution ( dedx += dedx * frac_smearing )
        dEdxResFunc: "TMath::Gaus(x,[0],[1],1)"
        # params:
        # 1st param: mean of gaussian smearing (0 -> no offset)
        # 2nd param: smearing width
        dEdxResParams: [0,0.1]
        # minimum of function (since relative smearing -1 is good)
        dEdxResMin: -1
        # maximum of function (since relative smearing +1 is good)
        dEdxResMax: 1

    }

}
